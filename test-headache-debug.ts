import { PlaywrightQARunner } from './src/runners/PlaywrightQARunner';
import { TestScenario } from './src/types';

async function testHeadache() {
  const scenario: TestScenario = {
    name: '30Ê≠≥Â•≥ÊÄß„ÉªÈ†≠ÁóõÔºà„Éá„Éê„ÉÉ„Ç∞Ôºâ',
    user: { age: 30, sex: 'female', relationship: 'myself' },
    complaints: [{ id: 'headache', text: 'È†≠Áóõ„Åå„Åô„Çã„ÄÅÈ†≠„ÅåÈáç„ÅÑ' }],
    answers: [],
  };

  const runner = new PlaywrightQARunner('https://staging.ubie.app');
  runner.setEngine('c-diagnosis');
  runner.setRandomSeed(12345);
  
  console.log('üîµ C-DiagnosisÂÆüË°å‰∏≠ÔºàÈ†≠Áóõ„Ç∑„Éä„É™„Ç™ - question-16275Á¢∫Ë™çÔºâ...\n');
  await runner.init(true);
  
  try {
    const result = await runner.runScenario(scenario);
    console.log(`\n‚úÖ ÂÆå‰∫Ü: ${result.questionCount}Âïè, ${result.diseases.length}ÁñæÊÇ£\n`);
    
    // question-16275„ÅåÂê´„Åæ„Çå„Å¶„ÅÑ„Çã„ÅãÁ¢∫Ë™ç
    const has16275 = result.questionLogs?.some(log => log.url.includes('question-16275'));
    console.log(`üìã question-16275„ÅÆÊúâÁÑ°: ${has16275 ? '‚úÖ „ÅÇ„Çä' : '‚ùå „Å™„Åó'}\n`);
    
    if (has16275) {
      const q16275 = result.questionLogs?.find(log => log.url.includes('question-16275'));
      console.log(`üìù question-16275„ÅÆÂÜÖÂÆπ:`);
      console.log(`   URL: ${q16275?.url}`);
      console.log(`   Ë≥™Âïè: ${q16275?.questionText}`);
      console.log(`   ÈÅ∏ÊäûËÇ¢: ${q16275?.availableOptions.join(', ')}`);
      console.log(`   ÈÅ∏Êäû: ${q16275?.selectedOption}\n`);
    } else {
      console.log(`‚ö†Ô∏è  question-16275„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇ`);
      console.log(`\nüìã ÂÖ®Ë≥™Âïè„ÅÆURL‰∏ÄË¶ß:`);
      result.questionLogs?.forEach((log, i) => {
        console.log(`   Q${i + 1}: ${log.url}`);
      });
    }
  } catch (error: any) {
    console.log(`‚ùå „Ç®„É©„Éº: ${error.message}`);
  } finally {
    await runner.close();
  }
}

testHeadache().catch(console.error);
